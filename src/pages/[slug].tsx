import { type NextPage } from "next";
import Head from "next/head";
import ErrorPAge from "~/Components/ErrorPage";
// import { LoadingPage } from "~/Components/Loading";
import { api } from "~/utils/api";

const ProfilePage: NextPage = () => {
  const { data, isLoading } = api.profile.getUserByUsername.useQuery({
    id: "user_2W46BHMYpsV1Oq6m3C86Nvbieea",
  });

  console.log("Logging data", data);

  if (isLoading) {
    console.log("is Loading ....");
  }

  if (!data)
    return (
      <div>
        <ErrorPAge />
      </div>
    );
  console.log(data.id);

  return (
    <>
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center ">
        <h1>hello {data.username}</h1>
      </main>
    </>
  );
};

// import { createServerSideHelpers } from "@trpc/react-query/server";
// import { appRouter } from "~/server/api/root";
// import { prisma } from "~/server/db";
// import { GetStaticProps, NextPage } from "next";
// import superjson from "superjson";

// export const getStaticProps: GetStaticProps = async (context) => {
//   const ssg = createServerSideHelpers({
//     router: appRouter,
//     ctx: { prisma, userId: null },
//     transformer: superjson,
//   });

//   const slug = context.params?.slug;

//   if (typeof slug !== "string") throw new Error("no slug");

//   const username = slug.replace("@", "");

//   await ssg.profile.getUserByUsername.prefetch({ username });

//   // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
//   const serializedData = JSON.parse(JSON.stringify(ssg.dehydrate()));
//   return {
//     props: {
//       // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
//       trpcState: serializedData,
//     },
//   };
// };

// export const getStaticPaths = () => {
//   return {
//     paths: [],
//     fallback: "blocking",
//   };
// };

export default ProfilePage;
